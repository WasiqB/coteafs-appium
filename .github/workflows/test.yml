name: Test coteafs-appium project

on:
  push:
    branches:
      - master
      - main
      - release
      - issue-*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'

      - name: Build the project
        run: mvn install -DskipTests

      - name: Upload target folder
        uses: actions/upload-artifact@v2
        with:
          name: target
          path: ${{ github.workspace }}/target

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

  test:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      CLOUD_USER: ${{ secrets.CLOUD_USER }}
      CLOUD_KEY: ${{ secrets.CLOUD_KEY }}
      APP: ${{ secrets.APP }}
      APP_IOS: ${{ secrets.APP_IOS }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'

      - name: Restore local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

      - name: Download target folder
        uses: actions/download-artifact@v2
        with:
          name: target

      - name: Test execution
        run: mvn org.jacoco:jacoco-maven-plugin:prepare-agent install -Pcoverage-per-test

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Results
          path: ${{ github.workspace }}/target/surefire-reports/*.xml
          reporter: java-junit

      - name: Upload target folder
        uses: actions/upload-artifact@v2
        with:
          name: target
          path: ${{ github.workspace }}/target

  analysis:
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'

      - name: Restore local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

      - name: Download target folder
        uses: actions/download-artifact@v2
        with:
          name: target

      - name: Analyse code
        env:
          SONAR_KEY: ${{ secrets.SONAR_KEY }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
        run: |
          mvn package sonar:sonar \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.organization=$SONAR_ORG \
            -Dsonar.login=$SONAR_KEY \
            -DskipTests \
            -Dcheckstyle.skip \
            -Dsonar.branch.name=${{ github.ref }}